# -----------------------------
# shadow settings
# -----------------------------
#
# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
shadow = true;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
shadow-opacity = .55

# The left offset for shadows, in pixels. (defaults to -15)
shadow-offset-x = -20
shadow-offset-x = -20;

# The top offset for shadows, in pixels. (defaults to -15)
shadow-offset-y = -20;

# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",

  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'dwm'",
  "class_g *?= 'slop'",
  "class_g = 'farge'",
  # "class_g = 'Rofi'",
  # "class_g = 'chromium'",

  "window_type = 'menu'",
  "window_type = 'dropdown_menu'",
  "window_type = 'popup_menu'",
  "window_type = 'tooltip'",
  "window_type = 'utility'",

  # "_GTK_FRAME_EXTENTS@:c",
  # don't draw shadows for hidden tabs
  # "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];

# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
fading = false;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
# fade-in-step = 0.043;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
# fade-out-step = 0.053;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# fade-exclude = []


# -----------------------------
# transparency/opacity settings
# -----------------------------
#
# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 0.9

# Let inactive opacity set by -i override the '_NET_WM_WINDOW_OPACITY' values of windows.
inactive-opacity-override = true;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 0.85

# Specify a list of conditions of windows that should never be considered focused.
# focus-exclude = []
focus-exclude = [
  "class_g = 'Cairo-clock'" ,
  "class_g = 'Rofi'",
  "class_g = 'i3lock'",

  # "QTILE_INTERNAL:32c",
];

opacity-rule = [
  "97:class_g = 'dmenu'",
  "90:class_g = 'scratch_term'",
  "100:class_g = 'awesome'",
  "100:class_g = 'slock'",
  "100:class_g = 'mpv'",
  "100:class_g = 'gl'",
  "100:class_g = 'farge'",
  "100:class_g = 'dwm'",
  "100:class_g = 'deadd-notification-center'",
  "100:class_g = 'Gimp-2.10'",
  "100:class_g = 'qView'",
  "100:class_g = 'FreeTube'",
  "100:class_g = 'feh'",
  "100:class_g = 'yuzu'",
  "100:class_g = 'ryujinx'",
  "100:class_g = 'virt-manager'",
  "100:class_g = 'steam_app_1446780'",
  # "100:class_g = 'Rofi'",

  # disable opicity and blur on fullscreen
  "100:fullscreen",

  # "90:QTILE_INTERNAL:32c",
  # "100:_NET_WM_STATE@[0]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "100:_NET_WM_STATE@[1]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "100:_NET_WM_STATE@[2]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "100:_NET_WM_STATE@[3]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "100:_NET_WM_STATE@[4]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];


# ---------------
# corner settings
# ---------------
#
# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
# corner-radius = 20;
# round-borders = 1;

# Exclude conditions for rounded corners.
#rounded-corners-exclude = [
#  "window_type = 'dock'",
#  "window_type = 'desktop'"
#];


# -------------
# blur settings
# -------------
#
blur: {
  kernel = "3x3box";
  method = "dual_kawase";
  strength = 6;
  background = true;
  background-frame = false;
  background-fixed = false;
}

# Exclude conditions for background blur.
blur-background-exclude = [
  "class_g = 'Rofi'",
  # "class_g = 'awesome'",
  # "class_g = 'Chromium'",
  # "class_g = 'Discord'",
  # "class_g = 'Dunst'",
  # "class_g = 'Peek'",

  # "window_type = 'dock'",
  # "window_type = 'desktop'",
  "window_type = 'menu'",
  "window_type = 'dropdown_menu'",
  "window_type = 'popup_menu'",
  "window_type = 'tooltip'",

  # "QTILE_INTERNAL:32c",
  # "_GTK_FRAME_EXTENTS@:c",
];


# ------------------
# animation settings
# ------------------
#
animations = ({
    triggers = ["open", "show"];
    preset = "fly-in";
    # scale = 0.5;
    duration = 0.3;
    direction = "up";
},
{
    triggers = ["close", "hide"];
    preset = "fly-out";
    # scale = 0.5;
    duration = 0.3;
    direction = "down";
})


# ----------------
# general settings
# ----------------
#
# Specify the backend to use: `xrender`, `glx`, `egl` or `xr_glx_hybrid`.
# `xrender` is the default one.
#
backend = "glx"

# Use higher precision during rendering, and apply dither when presenting the
# rendered screen. Reduces banding artifacts, but might cause performance
# degradation. Only works with OpenGL.
#
dithered-present = false;

# Enable/disable VSync.
#
vsync = true

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
#
mark-wmwin-focused = false;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
#
mark-ovredir-focused = false

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
#
detect-client-opacity = false;

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy,
# provided that the WM supports it.
#
use-ewmh-active-win = true;

# Unredirect all windows if a full-screen opaque window is detected,
# to maximize performance for full-screen windows. Known to cause flickering
# when redirecting/unredirecting windows.
#
unredir-if-possible = false;

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
#
detect-transient = true;

# Disable the use of damage information.
# This cause the whole screen to be redrawn every time, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
use-damage = false;

# Use X Sync fence to sync clients' draw calls, to make sure all draw
# calls are finished before picom starts drawing. Needed on nvidia-drivers
# with GLX backend for some users.
#
xrender-sync-fence = false;

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
#
# must need for 'dwm'
transparent-clipping = false;

transparent-clipping-exclude = [
  "class_g = 'dmenu'",
	"class_g = 'Rofi'",
  "class_g = 'konsole'",
  "class_g = 'Thunar'",
  "class_g = 'Chromium'",
  "class_g = 'chromium'",
	"class_g = 'firefox'",
	"class_g = 'TelegramDesktop'",
]

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter.
# If using the "TRACE" log level, it's better to log into a file
# using *--log-file*, since it can generate a huge stream of logs.
#
# log-level = "debug"
log-level = "warn";

# Window type settings
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   clip-shadow-above:::
#     Controls whether shadows that would have been drawn above the window should
#     be clipped. Useful for dock windows that should have no shadow painted on top.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  #dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.85; }
  dropdown_menu = { opacity = 0.85; }
};
